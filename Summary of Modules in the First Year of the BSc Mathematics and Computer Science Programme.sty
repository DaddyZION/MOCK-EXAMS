Summary of Modules in the First Year of the BSc Mathematics and Computer Science Programme: 
Calculus 1: At its heart, calculus is the study of limits. Many quantities can be expressed as the limiting value of a sequence of approximations, for example the slope of a tangent to a curve, the rate of change of a function, the area under a curve, and so on. Calculus provides us with tools for studying all of these, and more. Many of the ideas can be traced back to the ancient Greeks, but calculus as we now understand it was first developed in the 17th Century, independently by Newton and Leibniz. The modern form presented in this module was fully worked out in the late 19th Century. MATH101 lays the foundation for the use of calculus in more advanced modules on differential equations, differential geometry, theoretical physics, stochastic analysis, and many other topics. It begins from the very basics – the notions of real number, sequence, limit, real function, and continuity – and uses these to give a rigorous treatment of derivatives and integrals for real functions of one real variable.
Designing Systems for the Digital Society: This module will provide students with an all rounded appraisal of what is expected from a computing professional in the current digital society. Students will be introduced to social, legal and ethical aspects on computing and will develop employability skills. As a way to blend both theory and practice, students will be equipped with concepts and techniques for designing digital systems tailored to the needs of the user.
Introduction to Linear Algebra:Linear algebra is the branch of mathematics concerning vector spaces and linear mappings between such spaces. It is the study of lines, planes, and subspaces and their intersections using algebra.
Linear algebra first emerged from the study of determinants, which were used to solve systems of linear equations. Determinants were used by Leibniz in 1693, and subsequently, Cramer’s Rule for solving linear systems was devised in 1750. Later, Gauss further developed the theory of solving linear systems by using Gaussian elimination. All these classical themes, in their modern interpretation, are included in the module, which culminates in a detailed study of eigenproblems. A part of the module is devoted to complex numbers which are basically just planar vectors. Linear algebra is central to both pure and applied mathematics. This module is an essential pre-requisite for nearly all modules taught in the Department of Mathematical Sciences.
Introduction To Programming: The module provides an introduction to procedural programming using current language platforms. The module incorporates program design, problem solving, the importance of maintainable, robust software and testing as well as introducing procedural language main programming constructs. Students gain practical experience with program design, programming and testing during weekly laboratory sessions.
Programming Language Paradigms: This module is for students that already have some programming skills. Students will learn about the two main programming paradigms: imperative programming and functional programming. Since most introductory programming courses teach imperative programming, this module will focus on the functional paradigm. Students will learn how to program in Haskell, a popular functional programming language. They will learn how to formulate programs in a functional way, and the common techniques and idioms that are used to solve problems in functional programming.


